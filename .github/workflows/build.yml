name: Build

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'chromacal/package-lock.json'
          
      - name: Install Dependencies
        working-directory: ./chromacal
        run: |
          npm ci
          npm list
        
      - name: Build Application
        working-directory: ./chromacal
        run: |
          echo "Starting build process..."
          npm run make
          echo "Build completed. Checking output directory..."
          ls -R out/make/
        env:
          DEBUG: electron-builder
          
      # Windows-specific artifact upload
      - name: Upload Windows Artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            chromacal/out/make/squirrel.windows/x64/*.exe
            chromacal/out/make/zip/win32/*.zip
            
      # Linux-specific artifact upload
      - name: Upload Linux Artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: |
            chromacal/out/make/deb/x64/*.deb
            chromacal/out/make/rpm/x64/*.rpm
            chromacal/out/make/zip/linux/*.zip
            
      # Release creation (only on tag)
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            chromacal/out/make/**/*.exe
            chromacal/out/make/**/*.zip
            chromacal/out/make/**/*.deb
            chromacal/out/make/**/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}